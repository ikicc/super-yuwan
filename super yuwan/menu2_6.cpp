//menu2_6.cpp
#include <stdio.h>
#include <iostream>
void m2_6_1(void) {//1. 函数}――姚锋
	system("cls");     //调用系统命令，清屏
	printf("\n\n    函数 \n\n  ");
	printf("函数的语法格式为：\n");
	printf("返回值类型 函数名(参数表)\n");
	printf("{\n");
	printf("  函数体\n");
	printf("}\n");
	printf("其中，返回值类型可以是任意类型\n");
	printf("函数名可以是任意合法的标识符\n");
	printf("参数表可以是任意类型的参数\n");
	printf("函数体中可以是任意合法的语句\n");
	printf("\n按回车键返回...");
	getchar();
	rewind(stdin);     //清空输入缓冲区
}
void m2_6_2(void) {//2. 指针}――姚锋
	system("cls");     //调用系统命令，清屏
	printf("\n\n    指针 \n\n  ");
	printf("指针是一个变量，其值为另一个变量的地址\n");
	printf("指针的语法格式为：\n");
	printf("类型 *指针名\n");
	printf("其中，类型可以是任意类型\n");
	printf("指针名可以是任意合法的标识符\n");
	printf("指针的值为另一个变量的地址\n");
	printf("指针的值可以用&运算符取得\n");
	printf("指针的值可以用*运算符取得指针所指向的变量的值\n");
	printf("\n按回车键返回...");
	getchar();
	rewind(stdin);     //清空输入缓冲区
}
void m2_6_3(void) {//3. 指针与函数}――姚锋
	system("cls");     //调用系统命令，清屏
	printf("\n\n    指针与函数 \n\n  ");
	printf("指针与函数的语法格式为：\n");
	printf("返回值类型 (*指针名)(参数表)\n");
	printf("其中，返回值类型可以是任意类型\n");
	printf("指针名可以是任意合法的标识符\n");
	printf("参数表可以是任意类型的参数\n");
	printf("指针的值为另一个函数的地址\n");
	printf("指针的值可以用&运算符取得\n");
	printf("指针的值可以用*运算符取得指针所指向的函数的值\n");
	printf("\n按回车键返回...");
	getchar();
	rewind(stdin);     //清空输入缓冲区
}
void m2_6_4(void) {//4. 指针与数组}――姚锋
	system("cls");     //调用系统命令，清屏
	printf("\n\n    指针与数组 \n\n  ");
	printf("指针与数组的语法格式为：\n");
	printf("类型 *指针名\n");
	printf("其中，类型可以是任意类型\n");
	printf("指针名可以是任意合法的标识符\n");
	printf("指针的值为另一个数组的地址\n");
	printf("指针的值可以用&运算符取得\n");
	printf("指针的值可以用*运算符取得指针所指向的数组的值\n");
	printf("\n按回车键返回...");
	getchar();
	rewind(stdin);     //清空输入缓冲区
}
void m2_6_5(void) {//5. 指针与字符串}――姚锋
	system("cls");     //调用系统命令，清屏
	printf("\n\n    指针与字符串 \n\n  ");
	printf("指针与字符串的语法格式为：\n");
	printf("类型 *指针名\n");
	printf("其中，类型可以是任意类型\n");
	printf("指针名可以是任意合法的标识符\n");
	printf("指针的值为另一个字符串的地址\n");
	printf("指针的值可以用&运算符取得\n");
	printf("指针的值可以用*运算符取得指针所指向的字符串的值\n");
	printf("\n按回车键返回...");
	getchar();
	rewind(stdin);     //清空输入缓冲区
}
